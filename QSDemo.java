//Упражнение, реализовать быструю сортировку 
//1.Определяем опорный элемент
//2.Пока left <= right выполняем:
//        2.1 Пока left < pivot выполняем:
//                    left ++
//        2.2 Пока right > pivot выполняем:
//                    right--
//        2.3 Если left <= right выполняем:
//                    обмен
//                    left ++
//                    right--
//3.Вызываем метод сортировки для левого подмассива
//4.Вызываем метод сортировки для правого подмассива

class QuickSort {
    public static void qSort(int array[], int l, int r) {
        int buffer = 0;//для временного хранения при обмене значениями
        int left = l;//левый указатель (начало массива) 
        int right = r;//правый указатель (конец массива) 
        int pivot = array[ (left + right) / 2 ];//опорный элемент
        
        //сравниваем каждый элемент массива с опорным элементом, те что меньше 
        //будут слева, те что больше, справа. Таким образом получаем 2 подмассива
        while (left <= right){// если левый больше правого, значит данный массив обработан
            
            //если левый элемент меньше опорного, он попадает в левый подмассив,
            //тоесть левый указатель смещается вправо, включая элемент в левый подмассив
            while (array[left] < pivot) 
                left++;

            //если правый элемент больше опорного он попадает в правый подмассив,
            //тоесть правый указатель смещается влево, включая элемент в правый подмассив
            while (array[right] > pivot)
                right--;
           
            //если левый элемент больше опорного и правый элемент меньше опорного, то они 
            //не в своем подмассиве, меняем их местами и смещаем указатели включая эти элементы 
            //в соответствующие подмассивы. 
            if (left <= right){
                buffer = array[left];
                array[left] = array[right];
                array[right] = buffer;
                left++;
                right--;
            }
        }

        //у нас готовы два подмассива относительно опорного элемента,
        //теперь к каждому из подмассивов вызываем метод сортировки 
        //в котором для каждого будет выбран опорный элемент,
        // будет произведена сортировка и так далее пока размер 
        //передаваемых массивов не будет равен одному элементу
        //это будет означать, что начальный массив отсортирован полностью
        if (l < right)
            qSort(array, l, right);
  
        if (r > left)
            qSort(array, left, r);  
    }    
}


//демонстрирует работу быстрой сортировки
class QSDemo {
    public static void main(String args[]){
        int array[] = {14, 9, 12, 7, 4, 17, 6};
        int i;

        //вывод на консоль массива
        System.out.print("     Arrey: ");
        for (i = 0; i < array.length; i++)
            System.out.print(array[i]+" ");

        System.out.println();

        //передаем массив методу для сортировки
        //метод обьявлен static поэтому нет необходимости создавать объект класса
        QuickSort.qSort( array, 0, array.length - 1 );

        //вывод на консоль отсортированного массива
        System.out.print("Sorted array: ");
        for(i = 0; i < array.length; i++)
            System.out.print(array[i]+" ");
    }
}